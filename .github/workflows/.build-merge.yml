name: Merge PR on Build Success

on:
  pull_request:
    types: [opened, edited, labeled]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Get labels
      id: get_labels
      run: |
        echo "::set-output name=labels::$(jq -r '.pull_request.labels | map(.name) | join(",")' "$GITHUB_EVENT_PATH")"

    - name: Check for specific label
      run: |
        if [[ "${{ steps.get_labels.outputs.labels }}" == *"build-script-1"* ]]; then
          echo "BUILD_SCRIPT_PATH=./user-1/build.sh" >> $GITHUB_ENV
        elif [[ "${{ steps.get_labels.outputs.labels }}" == *"build-script-2"* ]]; then
          echo "BUILD_SCRIPT_PATH=./user-2/build.sh" >> $GITHUB_ENV
        elif [[ "${{ steps.get_labels.outputs.labels }}" == *"build-script-3"* ]]; then
          echo "BUILD_SCRIPT_PATH=./user-3/build.sh" >> $GITHUB_ENV
        else
          echo "No matching label found. Exiting."
          exit 1
        fi
        name: Prepare and Run Build
        run: |
          chmod +x $BUILD_SCRIPT_PATH
          echo "Building the project using the script at $BUILD_SCRIPT_PATH..."
          bash "$BUILD_SCRIPT_PATH"

  merge:
    needs: build
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Check for Lock and Log Status
        id: check_lock
        uses: softprops/turnstyle@v2
        with:
          poll-interval-seconds: 15
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          TURNSTYLE_LOG_WAITING: "true" 

      - name: Merge PR
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo "Merging PR #$PR_NUMBER..."
          curl -s -X PUT \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge" \
            -d '{"commit_title":"Merging PR automatically","merge_method":"merge"}'
